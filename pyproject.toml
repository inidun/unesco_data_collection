[tool.poetry]
name = "unesco_data_collection"
version = "0.3.0"
description = "Curation of UNESCO documents for the INIDUN project."
authors = ["aibakeneko <aibakeneko at gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
argh = "^0.29.3"
ftfy = "^6.1.1"
fuzzysearch = "^0.7.3"
JPype1 = "^1.3.0"
loguru = "^0.7.0"
more-itertools = "^10.1.0"
nltk = "^3.7"
openpyxl = "^3.1.2"
pandas = "^2.0.0"
pdf2image = "^1.16.3"
pdfplumber = "^0.10.2"
pytesseract = "^0.3.9"
python-pdfbox = "^0.1.8"
thefuzz = {version = "^0.19.0", extras = ["speedup"]}
tqdm = "^4.63.0"
untangle = "^1.1.1"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
flake8 = "^6.0.0"
flake8-black = "^0.3.3"
flake8-bugbear = "^23.1.20"
flake8-pytest-style = "^1.6.0"
isort = "^5.10.1"
mypy = "^1.0.0"
pylint = "^2.15.5"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
types-setuptools = "^68.0.0.3"
types-toml = "^0.10.8"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ["py310"]
exclude = '''
(
  \.git
  | \.pypy_cache
  | \.pytest_cache
  | \.mypy_cache
  | deprecated
)
'''

[tool.coverage.run]
branch = true
omit = [
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
show_missing = true
sort = "Name"

[tool.isort]
profile = "black"
line_length = 120
py_version = "auto"
float_to_top = true
src_paths = [ "courier", "tests" ]

[tool.mypy]
python_version = "3.10"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = 'tests.*'
disallow_untyped_defs = false

[tool.pylint.main]
exit-zero = true
ignore-paths = "deprecated"
# ignore-patterns = ["^\\.#"]
jobs = 0
py-version = "3.10"

[tool.pylint.design]
max-args = 8
max-attributes = 14

[tool.pylint.exceptions]
overgeneral-exceptions = ["builtins.BaseException", "builtins.Exception"]

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = 120

[tool.pylint."messages control"]
disable = [
    "duplicate-code",  # FIXME: temporary,
    "invalid-name",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
    "pointless-string-statement",
    "global-statement",
    "c-extension-no-member",
    "too-few-public-methods",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "consider-using-enumerate",
    "unnecessary-comprehension",
    "too-many-branches",
    "too-many-locals",
    "wrong-import-order",
    "wrong-spelling-in-comment",
    "wrong-spelling-in-docstring"
]

[tool.pylint.miscellaneous]
notes = ""

[tool.pylint.refactoring]
never-returning-functions = ["sys.exit", "argparse.parse_error"]

[tool.pylint.reports]
output-format = "colorized"
score = false

[tool.pytest.ini_options]
log_cli = "False"
testpaths = [
    "tests",
]
python_files = "*_test.py"
python_functions = "test_*"
markers = [
    "java: marks tests as java dependent (deselect with '-m \"not java\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]
filterwarnings = [
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning:pkg_resources.*:",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning:pdfbox.*:"
]